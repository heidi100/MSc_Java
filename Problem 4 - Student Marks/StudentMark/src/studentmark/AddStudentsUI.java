/*
 * The student mark systems Add Students UI class that loads up when the add student 
 * button on the main ui is pressed.
 */
package studentmark;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;


/**
 * @author Heidi Portwine s6110438
 */
public class AddStudentsUI extends javax.swing.JFrame 
{
    // Array list course that is passed through and model declared.
    private static ArrayList<Course> courses = new ArrayList();
    public DefaultComboBoxModel coursesModel = new DefaultComboBoxModel();
    
    /**
     * Creates new form AddStudentsUI passing through the array list course.
     */
    public AddStudentsUI(ArrayList<Course> c) 
    {
        courses = c;
        initComponents();
        initComboBox();
    }
    
    /**
     * Initalises the combo box that lists the courses.
     */
    public void initComboBox()
    {
        // Loops through the courses.
        for(Course c : courses)
        {
            // Adds the course codes to the course model.
            coursesModel.addElement(c.code);
        }
        // Sets the course combo box to display the model.
        courseCombo.setModel(coursesModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        stuLabel = new javax.swing.JLabel();
        fNameLabel = new javax.swing.JLabel();
        lNameLabel = new javax.swing.JLabel();
        stuLabel2 = new javax.swing.JTextField();
        fNameLabel2 = new javax.swing.JTextField();
        lNameLabel2 = new javax.swing.JTextField();
        courseLabel = new javax.swing.JLabel();
        courseCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        stuLabel.setText("Student ID");

        fNameLabel.setText("First Name:");

        lNameLabel.setText("Last Name:");

        courseLabel.setText("Course: ");

        courseCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select a course" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fNameLabel)
                    .addComponent(lNameLabel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(courseLabel)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(stuLabel)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lNameLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(fNameLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addComponent(stuLabel2))
                    .addComponent(courseCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stuLabel)
                    .addComponent(stuLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameLabel)
                    .addComponent(fNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNameLabel)
                    .addComponent(lNameLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseLabel)
                    .addComponent(courseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(addButton))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * The action performed event for the add button on the add Student UI.
     * This will add the users input of the student data fields to the
     * course for the student.
     * @param evt 
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        // Sets the variables to get the data from the text fields and combo box.
        String stuID = stuLabel2.getText(); 
        String fName = fNameLabel2.getText(); 
        String lName = lNameLabel2.getText();
        String courseCom = courseCombo.getSelectedItem().toString();
        
        // Initalises variabes.
        Course course = null;
        int cIndex = 0;
        
        // Checks that no fields are left empty.
        if(stuID.equals("") || fName.equals("") || lName.equals(""))
        {
            // Displays a message diaglog box asking the user to fill 
            // out all of the fields required.
            JOptionPane.showMessageDialog(this, "Please fill in all the boxes");
        }
        // If all the fields are complete then it will check the inputs.
        else
        {
            // Checks that the home phone number is 8 digits long.
            if(!(stuID.length() == 8))
            {
                // Displays a message diaglog box asking the user to enter 
                // a student number that is 8 digits.
                JOptionPane.showMessageDialog(this, "Please enter a Student ID of 8 characters");
            }
            // Checks that the first name entered is greater than 0 and 
            // less than or equal to 25 characters.
            else if(!(fName.length() <=  25 && fName.length() > 0))
            {
                // Displays a message dialog box asking the user to enter a first
                // name that is between 0 and 25 characters long.
                JOptionPane.showMessageDialog(this, "Please enter a student first name between 1 and 25 characters.");
            }
            // Checks that the last name entered is greater than 0 
            // and less than or equal to 25 characters.
            else if(!(lName.length() <=  25 && lName.length() > 0))
            {
                // Displays a message dialog box asking the user to enter a 
                // last name between 0 and 25 characters long.
                JOptionPane.showMessageDialog(this, "Please enter a student last name between 1 and 25 characters.");
            }
            // If all of the validation is passed then it will create the student.
            else
            {
                // Creates a student object using the user inputs given.
                Student s1 = new Student(stuID,fName,lName,courseCom);
               
                // Loops throught the courses array using a for loop.
                for(Course cou : courses)
                {
                    // Checks if the course code equals the current coude selectect in the combo box.
                    if(cou.getCode().equals(courseCom))
                    {
                        course = cou;
                        cIndex = courses.indexOf(cou);
                    }
                }
               
               // Updates the student number for the course 
               courses.get(cIndex).getStudents().add(s1);
               // Displays a message dialog box informing the user that the student has been added.
               JOptionPane.showMessageDialog(this, "The Student has been added.");
               // Takes the user back to the main UI screen.
               StudentMainUI stMain = new StudentMainUI(courses);
               stMain.setVisible(true);
               this.setVisible(false);
           }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * The action performed event for the back button on the add student UI.
     * This method will take the user back to the main UI screen when the button is pressed.
     * @param evt 
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        StudentMainUI stMain = new StudentMainUI(courses);
        stMain.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * The main method for the add student UI.
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudentsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudentsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudentsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudentsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new AddStudentsUI(courses).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> courseCombo;
    private javax.swing.JLabel courseLabel;
    private javax.swing.JLabel fNameLabel;
    private javax.swing.JTextField fNameLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JTextField lNameLabel2;
    private javax.swing.JLabel stuLabel;
    private javax.swing.JTextField stuLabel2;
    // End of variables declaration//GEN-END:variables
}
